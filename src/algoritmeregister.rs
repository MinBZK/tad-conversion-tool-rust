use serde::Deserialize;

#[derive(Debug, Deserialize)]
pub struct AlgoritmeregisterRecord {
    name: Option<String>,
    organization: Option<String>,
    description_short: Option<String>,
    type_: Option<String>,
    category: Option<String>,
    website: Option<String>,
    status: Option<String>,
    goal: Option<String>,
    proportionality: Option<String>,
    lawful_basis: Option<String>,
    iama_description: Option<String>,
    standard_version: Option<String>,
    uuid: Option<String>,
    url: Option<String>,
    contact_email: Option<String>,
    lang: Option<String>,
    publiccode: Option<String>,
    source_data: Option<String>,
    methods_and_models: Option<String>,
    human_intervention: Option<String>,
    risks: Option<String>,
    provider: Option<String>,
    tags: Option<String>,
    source_id: Option<String>,
    begin_date: Option<String>,
    end_date: Option<String>,
    lawful_basis_link: Option<String>,
    impacttoetsen: Option<String>,
    source_data_link: Option<String>,
    process_index_url: Option<String>,
    publication_category: Option<String>,
    lawful_basis_grouping: Option<String>,
    impacttoetsen_grouping: Option<String>,
    source_data_grouping: Option<String>,
    department: Option<String>,
    impact: Option<String>,
    decision_making_process: Option<String>,
    documentation: Option<String>,
    competent_authority: Option<String>,
    iama: Option<String>,
    dpia: Option<String>,
    dpia_description: Option<String>,
    objection_procedure: Option<String>,
    area: Option<String>,
    revision_date: Option<String>,
    description: Option<String>,
    application_url: Option<String>,
    mprd: Option<String>,
    monitoring: Option<String>,
    performance_standard: Option<String>,
}
